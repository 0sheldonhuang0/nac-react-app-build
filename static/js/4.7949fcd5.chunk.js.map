{"version":3,"sources":["Components/BasicNac/AuthInput.js"],"names":["require","useStyles","makeStyles","buttonArea","margin","root","flexGrow","display","paper","overflow","flexDirection","formLabel","padding","textAlign","inputEmpty","img","maxWidth","height","AuthInput","classes","dispatch","useDispatch","storeSuccessedData","uploadData","type","successedData","className","container","spacing","item","xs","md","lg","component","id","label","variant","onClick","email","password","firebase","auth","createUserWithEmailAndPassword","then","user","console","log","alert","catch","error","errorCode","code","message","signUpWithEmailPassword","document","getElementById","value","color","signInWithEmailAndPassword","signInWithEmailPassword"],"mappings":"qQAaAA,EAAQ,KAGR,IAAMC,EAAYC,aAAW,iBAAO,CAClCC,WAAY,CACVC,OAAQ,oBAEVC,KAAM,CACJC,SAAU,EACVC,QAAS,QAEXC,MAAO,CACLD,QAAS,OACTE,SAAU,OACVC,cAAe,UAEjBC,UAAW,CACTC,QAAS,aACTC,UAAW,QAEbC,WAAY,CACVV,OAAQ,cAEVW,IAAK,CACHC,SAAU,OACVC,OAAQ,YAIG,SAASC,IACtB,IAAMC,EAAUlB,IACVmB,EAAWC,cACXC,EAAqB,SAACC,GAC1BH,EAAS,CACPI,KAAM,oBACNC,cAAeF,KA2CnB,OACE,sBAAKG,UAAWP,EAAQd,KAAxB,UACMiB,GAAmB,GACrB,eAAC,IAAD,CAAWN,SAAS,KAAKU,UAAWP,EAAQQ,UAA5C,UACE,eAAC,IAAD,CAAMA,WAAS,EAACC,QAAS,EAAzB,UACE,eAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIN,UAAWP,EAAQX,MAAtD,UACE,cAAC,IAAD,CAAWyB,UAAU,SAASP,UAAWP,EAAQR,UAAjD,yCAGA,cAAC,IAAD,CACEuB,GAAG,iBACHC,MAAM,aACNX,KAAK,QACLE,UAAWP,EAAQL,gBAGvB,eAAC,IAAD,CAAMe,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAIN,UAAWP,EAAQX,MAAtD,UACE,cAAC,IAAD,CAAWyB,UAAU,SAASP,UAAWP,EAAQR,UAAjD,0CAGA,cAAC,IAAD,CACEuB,GAAG,oBACHC,MAAM,qBACNX,KAAK,WACLE,UAAWP,EAAQL,mBAIzB,eAAC,IAAD,CAAKD,UAAU,SAAf,UACE,cAAC,IAAD,CACEuB,QAAQ,YACRV,UAAWP,EAAQhB,WACnBkC,QAAS,YArErB,SAAiCC,EAAOC,GACtCC,IACGC,OACAC,+BAA+BJ,EAAOC,GACtCI,MAAK,SAACC,GAELC,QAAQC,IAAIF,GACZG,MAAM,oDACNzB,GAAmB,MAEpB0B,OAAM,SAACC,GACN,IAAIC,EAAYD,EAAME,KACHF,EAAMG,QACzBP,QAAQC,IAAII,GACZH,MAAM,uDA2DEM,CAHYC,SAASC,eAAe,kBAAkBC,MACvCF,SAASC,eAAe,qBACpCC,QANP,gCAYA,cAAC,IAAD,CACEpB,QAAQ,YACRqB,MAAM,UACN/B,UAAWP,EAAQhB,WACnBkC,QAAS,YA/DrB,SAAiCC,EAAOC,GACtCC,IACGC,OACAiB,2BAA2BpB,EAAOC,GAClCI,MAAK,SAACC,GAELC,QAAQC,IAAIF,GACZG,MAAM,oDACNzB,GAAmB,MAEpB0B,OAAM,SAACC,GACN,IAAIC,EAAYD,EAAME,KACHF,EAAMG,QACzBP,QAAQC,IAAII,GACZH,MAAM,uDAqDEY,CAHYL,SAASC,eAAe,kBAAkBC,MACvCF,SAASC,eAAe,qBACpCC,QAPP","file":"static/js/4.7949fcd5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Box from \"@material-ui/core/Box\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport FormLabel from \"@material-ui/core/FormLabel\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\n\r\n// Firebase App (the core Firebase SDK) is always required and must be listed first\r\nimport firebase from \"firebase/app\";\r\nrequire(\"firebase/auth\");\r\n\r\n// Initiale\r\nconst useStyles = makeStyles(() => ({\r\n  buttonArea: {\r\n    margin: \"0 10px 10px 10px\",\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    display: \"flex\",\r\n  },\r\n  paper: {\r\n    display: \"flex\",\r\n    overflow: \"auto\",\r\n    flexDirection: \"column\",\r\n  },\r\n  formLabel: {\r\n    padding: \"0 0 10px 0\",\r\n    textAlign: \"left\",\r\n  },\r\n  inputEmpty: {\r\n    margin: \"0 0 15px 0\",\r\n  },\r\n  img: {\r\n    maxWidth: \"100%\",\r\n    height: \"auto\",\r\n  },\r\n}));\r\n\r\nexport default function AuthInput() {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const storeSuccessedData = (uploadData) => {\r\n    dispatch({\r\n      type: \"ADD_UPLOADSUCCESS\",\r\n      successedData: uploadData,\r\n    });\r\n  };\r\n\r\n  // 注册用户\r\n  // 文档在此：https://firebase.google.com/docs/auth/web/start?authuser=0\r\n  function signUpWithEmailPassword(email, password) {\r\n    firebase\r\n      .auth()\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        // Signed in\r\n        console.log(user);\r\n        alert(\"大概注册成功了！\");\r\n        storeSuccessedData(true);\r\n      })\r\n      .catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(errorCode);\r\n        alert(\"遇到了一些错误！\");\r\n      });\r\n  }\r\n\r\n  // 登录\r\n  function signInWithEmailPassword(email, password) {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((user) => {\r\n        // Signed in\r\n        console.log(user);\r\n        alert(\"大概登录成功了！\");\r\n        storeSuccessedData(true);\r\n      })\r\n      .catch((error) => {\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        console.log(errorCode);\r\n        alert(\"遇到了一些错误！\");\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n         {storeSuccessedData(false)}\r\n        <Container maxWidth=\"lg\" className={classes.container}>\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={12} md={12} lg={12} className={classes.paper}>\r\n              <FormLabel component=\"legend\" className={classes.formLabel}>\r\n                Veuillez entrer votre email\r\n              </FormLabel>\r\n              <TextField\r\n                id=\"standard-email\"\r\n                label=\"Votre mail\"\r\n                type=\"email\"\r\n                className={classes.inputEmpty}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} md={12} lg={12} className={classes.paper}>\r\n              <FormLabel component=\"legend\" className={classes.formLabel}>\r\n                Veuillez entrer mot de passe\r\n              </FormLabel>\r\n              <TextField\r\n                id=\"standard-password\"\r\n                label=\"Votre mot de passe\"\r\n                type=\"password\"\r\n                className={classes.inputEmpty}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Box textAlign=\"center\">\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.buttonArea}\r\n              onClick={() => {\r\n                var email = document.getElementById(\"standard-email\").value;\r\n                var password = document.getElementById(\"standard-password\")\r\n                  .value;\r\n                signUpWithEmailPassword(email, password);\r\n              }}\r\n            >\r\n              CRÉER UN COMPTE\r\n            </Button>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.buttonArea}\r\n              onClick={() => {\r\n                var email = document.getElementById(\"standard-email\").value;\r\n                var password = document.getElementById(\"standard-password\")\r\n                  .value;\r\n                signInWithEmailPassword(email, password);\r\n              }}\r\n            >\r\n              SE CONNECTER\r\n            </Button>\r\n          </Box>\r\n        </Container> \r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}